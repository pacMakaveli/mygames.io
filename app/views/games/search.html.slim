- if params[:query]

  - if @games.nil?

    = "Nothing found for '<span>#{params[:query]}</span>'".html_safe

  - else

    = "Your search term for '<span>#{params[:query]}</span>' returned <span>#{@games.count}</span> results.".html_safe

    .games.games--search.games--list

      - @games.each do |g|

        .row.game
          .cell-sm
            .row

              .cell-sm-2

                .game-image
                  = image_tag(g['image']['thumb_url'], alt: g['name']) if g['image']

              .cell-sm.game-body

                .game-title
                  h2
                    = g['name']

                  .game-aliases
                    span.game-title-info
                      = g['aliases'].split("\n").join(', ') if g['aliases']

                .game-description
                  h6.game-body-heading Description
                  p.game-body-content
                    = g['deck']

                .game-platforms
                  h6.game-body-heading Platforms
                  p.game-body-content

                    - if g['platforms']
                      - g['platforms'].map do |p|
                        = link_to(p['abbreviation'], '#comingsoon', class: 'link badge')

              .cell-sm-3.game-body

                .game-actions

                  - game = Game.find_by_api_reference(g['id'])

                  - if Collection.where({ game_id: game.try(:id), user_id: current_user.id }).exists?

                    = link_to 'Remove from my Games', '', class: 'btn btn-warning'

                  - else

                    = link_to 'Add to my Games', new_from_gb_games_path(g['id']), class: 'btn btn-success'

                .game-release-date
                  h6.game-body-heading Release Date

                  - if g['original_release_date']

                    p.game-body-content.tooltip-left data-tooltip="#{g['original_release_date']}"
                      = "#{time_ago_in_words(g['original_release_date'])} ago"

                .game-genre
                  h6.game-body-heading Genre
                  p.game-body-content
                    = g['genres']

- else

  .alert.alert-info
    p
      = "Start by searching a game"
