- if params[:query]

  - if @games.nil?

    = "Nothing found for '<span>#{params[:query]}</span>'".html_safe

  - else

    = "Your search term for '<span>#{params[:query]}</span>' returned <span>#{@games.count}</span> results.".html_safe

    / = Game.where("name LIKE ? OR description LIKE ?", "%#{params[:query]}%", "%#{params[:query]}%").count

    ul.list-group

    - @games.each do |g|

      / = Game.find_by_api_reference(g['id']).users.map(&:name)

      li.list-group-item
        .media
          .media-left
            = image_tag(g['image']['thumb_url'], alt: g['name']) if g['image']

          .media-body
            .row
              .col-sm-7
                h4.media-heading
                  = g['name']
                  br
                  small
                    = "Also known as: #{g['aliases'].split("\n").join(', ')}" if g['aliases']

              .col-sm-5
                .pull-right
                  .btn-group.btn-group-sm

                    / - if current_user.games.reference_id == g['id']
                    / - if Game.where("reference_id = ? AND user_id = ?", g['id'], current_user.id).exists?

                      / = link_to 'Remove from my Games', '', class: 'btn btn-warning'

                    / - else

                    = link_to 'Add to my Games', new_from_gb_games_path(g['id']), class: 'btn btn-success'

                    = link_to 'Add to my Wishlist', '#', class: 'btn btn-success'

            .row
              .col-sm-12
                h6 Description
                = g['deck']

              .col-sm-12
                h6 Release Date
                = "#{distance_of_time_in_words(g['original_release_date'], Time.now)} ago in #{g['original_release_date']}" if g['original_release_date']

              .col-sm-12
                h6 Platforms
                = g['platforms'].map{ |p| link_to(p['abbreviation'], search_games_path(query: params[:query])) }.to_sentence(last_word_connector: ' and ').html_safe if g['platforms']

              .col-sm-12
                h6 Genre
                = g['genres']

- else

  .alert.alert-info
    p
      = "Start by searching a game"
